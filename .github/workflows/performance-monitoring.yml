name: Performance Monitoring

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: '0 */6 * * *' # 6時間ごと
  workflow_dispatch:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build

      - name: Start production server
        run: |
          npm start &
          sleep 10

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/blog
            http://localhost:3000/about
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

      - name: Format Lighthouse Score
        id: format_lighthouse_score
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const results = JSON.parse(
              fs.readFileSync('${{ steps.lighthouse.outputs.resultsPath }}', 'utf8')
            );

            const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟡' : '🔴';

            const comment = `## 📊 Lighthouse Performance Report

            | Metric | Score |
            |--------|-------|
            | Performance | ${score(results.performance)} ${results.performance} |
            | Accessibility | ${score(results.accessibility)} ${results.accessibility} |
            | Best Practices | ${score(results['best-practices'])} ${results['best-practices']} |
            | SEO | ${score(results.seo)} ${results.seo} |

            ### Core Web Vitals
            - **LCP**: ${results.audits['largest-contentful-paint'].displayValue}
            - **FID**: ${results.audits['max-potential-fid'].displayValue}
            - **CLS**: ${results.audits['cumulative-layout-shift'].displayValue}

            [Full Report](${{ steps.lighthouse.outputs.links }})
            `;

            return comment;

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.format_lighthouse_score.outputs.result }}
            });

      - name: Check performance thresholds
        run: |
          PERF_SCORE=$(cat .lighthouseci/lhr-*.json | jq '.categories.performance.score * 100')
          if (( $(echo "$PERF_SCORE < 80" | bc -l) )); then
            echo "⚠️ パフォーマンススコアが80未満です: $PERF_SCORE"
            exit 1
          fi

  bundle-size:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and analyze bundle
        run: |
          npm run build
          npx next-bundle-analyzer

      - name: Upload bundle stats
        uses: actions/upload-artifact@v3
        with:
          name: bundle-stats
          path: .next/analyze/

      - name: Check bundle size limits
        run: |
          # バンドルサイズの制限をチェック
          MAIN_JS_SIZE=$(find .next/static/chunks -name "*.js" -exec du -b {} \; | sort -rn | head -1 | cut -f1)
          MAX_SIZE=500000 # 500KB

          if [ "$MAIN_JS_SIZE" -gt "$MAX_SIZE" ]; then
            echo "⚠️ メインJSバンドルサイズが制限を超えています: $MAIN_JS_SIZE bytes (max: $MAX_SIZE)"
            exit 1
          fi

  web-vitals:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @unlighthouse/cli puppeteer

      - name: Build production
        run: npm run build

      - name: Start server
        run: |
          npm start &
          sleep 10

      - name: Run Web Vitals audit
        run: |
          npx unlighthouse --site http://localhost:3000 \
            --output-path ./web-vitals-report \
            --budget-performance 80 \
            --budget-accessibility 90 \
            --budget-best-practices 90 \
            --budget-seo 95

      - name: Upload Web Vitals report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: web-vitals-report
          path: ./web-vitals-report/